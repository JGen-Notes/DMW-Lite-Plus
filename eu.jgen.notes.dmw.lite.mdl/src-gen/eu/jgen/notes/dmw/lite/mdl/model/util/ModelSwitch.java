/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.mdl.model.util;

import eu.jgen.notes.dmw.lite.mdl.model.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage
 * @generated
 */
public class ModelSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ModelPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = ModelPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case ModelPackage.YMODEL:
      {
        YModel yModel = (YModel)theEObject;
        T result = caseYModel(yModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YIMPORT:
      {
        YImport yImport = (YImport)theEObject;
        T result = caseYImport(yImport);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOTATION:
      {
        YAnnotation yAnnotation = (YAnnotation)theEObject;
        T result = caseYAnnotation(yAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ENTITY:
      {
        YAnnotEntity yAnnotEntity = (YAnnotEntity)theEObject;
        T result = caseYAnnotEntity(yAnnotEntity);
        if (result == null) result = caseYAnnotation(yAnnotEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ATTRIBUTE:
      {
        YAnnotAttribute yAnnotAttribute = (YAnnotAttribute)theEObject;
        T result = caseYAnnotAttribute(yAnnotAttribute);
        if (result == null) result = caseYAnnotIdInner(yAnnotAttribute);
        if (result == null) result = caseYAnnotEntityInner(yAnnotAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_RELATIONSHIP:
      {
        YAnnotRelationship yAnnotRelationship = (YAnnotRelationship)theEObject;
        T result = caseYAnnotRelationship(yAnnotRelationship);
        if (result == null) result = caseYAnnotIdInner(yAnnotRelationship);
        if (result == null) result = caseYAnnotEntityInner(yAnnotRelationship);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ID_INNER:
      {
        YAnnotIdInner yAnnotIdInner = (YAnnotIdInner)theEObject;
        T result = caseYAnnotIdInner(yAnnotIdInner);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_IDENTIFIER:
      {
        YAnnotIdentifier yAnnotIdentifier = (YAnnotIdentifier)theEObject;
        T result = caseYAnnotIdentifier(yAnnotIdentifier);
        if (result == null) result = caseYAnnotEntityInner(yAnnotIdentifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOTATION_ELEMENT_VALUE_PAIR:
      {
        YAnnotationElementValuePair yAnnotationElementValuePair = (YAnnotationElementValuePair)theEObject;
        T result = caseYAnnotationElementValuePair(yAnnotationElementValuePair);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ENTITY_INNER:
      {
        YAnnotEntityInner yAnnotEntityInner = (YAnnotEntityInner)theEObject;
        T result = caseYAnnotEntityInner(yAnnotEntityInner);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_EXPRESSION:
      {
        YAnnotExpression yAnnotExpression = (YAnnotExpression)theEObject;
        T result = caseYAnnotExpression(yAnnotExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_TECHNICAL_DESIGN:
      {
        YAnnotTechnicalDesign yAnnotTechnicalDesign = (YAnnotTechnicalDesign)theEObject;
        T result = caseYAnnotTechnicalDesign(yAnnotTechnicalDesign);
        if (result == null) result = caseYAnnotation(yAnnotTechnicalDesign);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_TABLE:
      {
        YAnnotTable yAnnotTable = (YAnnotTable)theEObject;
        T result = caseYAnnotTable(yAnnotTable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_COLUMN:
      {
        YAnnotColumn yAnnotColumn = (YAnnotColumn)theEObject;
        T result = caseYAnnotColumn(yAnnotColumn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_COLUMN_LIKE:
      {
        YAnnotColumnLike yAnnotColumnLike = (YAnnotColumnLike)theEObject;
        T result = caseYAnnotColumnLike(yAnnotColumnLike);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ABSTRACT_COLUMN:
      {
        YAnnotAbstractColumn yAnnotAbstractColumn = (YAnnotAbstractColumn)theEObject;
        T result = caseYAnnotAbstractColumn(yAnnotAbstractColumn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_PRIMARY_KEY:
      {
        YAnnotPrimaryKey yAnnotPrimaryKey = (YAnnotPrimaryKey)theEObject;
        T result = caseYAnnotPrimaryKey(yAnnotPrimaryKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_FOREIGN_KEY:
      {
        YAnnotForeignKey yAnnotForeignKey = (YAnnotForeignKey)theEObject;
        T result = caseYAnnotForeignKey(yAnnotForeignKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_KEYWORD:
      {
        YAnnotKeyword yAnnotKeyword = (YAnnotKeyword)theEObject;
        T result = caseYAnnotKeyword(yAnnotKeyword);
        if (result == null) result = caseYAnnotExpression(yAnnotKeyword);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_STRING_CONSTANT:
      {
        YAnnotStringConstant yAnnotStringConstant = (YAnnotStringConstant)theEObject;
        T result = caseYAnnotStringConstant(yAnnotStringConstant);
        if (result == null) result = caseYAnnotExpression(yAnnotStringConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_NUMBER_CONSTANT:
      {
        YAnnotNumberConstant yAnnotNumberConstant = (YAnnotNumberConstant)theEObject;
        T result = caseYAnnotNumberConstant(yAnnotNumberConstant);
        if (result == null) result = caseYAnnotExpression(yAnnotNumberConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_BOOL_CONSTANT:
      {
        YAnnotBoolConstant yAnnotBoolConstant = (YAnnotBoolConstant)theEObject;
        T result = caseYAnnotBoolConstant(yAnnotBoolConstant);
        if (result == null) result = caseYAnnotExpression(yAnnotBoolConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ModelPackage.YANNOT_ARRAY:
      {
        YAnnotArray yAnnotArray = (YAnnotArray)theEObject;
        T result = caseYAnnotArray(yAnnotArray);
        if (result == null) result = caseYAnnotExpression(yAnnotArray);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YModel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YModel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYModel(YModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YImport</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YImport</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYImport(YImport object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotation(YAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotEntity(YAnnotEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotAttribute(YAnnotAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Relationship</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Relationship</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotRelationship(YAnnotRelationship object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Id Inner</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Id Inner</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotIdInner(YAnnotIdInner object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Identifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Identifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotIdentifier(YAnnotIdentifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnotation Element Value Pair</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnotation Element Value Pair</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotationElementValuePair(YAnnotationElementValuePair object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Entity Inner</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Entity Inner</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotEntityInner(YAnnotEntityInner object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotExpression(YAnnotExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Technical Design</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Technical Design</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotTechnicalDesign(YAnnotTechnicalDesign object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Table</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Table</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotTable(YAnnotTable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Column</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Column</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotColumn(YAnnotColumn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Column Like</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Column Like</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotColumnLike(YAnnotColumnLike object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Abstract Column</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Abstract Column</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotAbstractColumn(YAnnotAbstractColumn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Primary Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Primary Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotPrimaryKey(YAnnotPrimaryKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Foreign Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Foreign Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotForeignKey(YAnnotForeignKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Keyword</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Keyword</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotKeyword(YAnnotKeyword object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot String Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot String Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotStringConstant(YAnnotStringConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Number Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Number Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotNumberConstant(YAnnotNumberConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Bool Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Bool Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotBoolConstant(YAnnotBoolConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Array</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Array</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotArray(YAnnotArray object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //ModelSwitch
