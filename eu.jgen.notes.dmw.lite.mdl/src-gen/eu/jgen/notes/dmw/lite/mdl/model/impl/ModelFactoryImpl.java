/**
 * generated by Xtext 2.21.0
 */
package eu.jgen.notes.dmw.lite.mdl.model.impl;

import eu.jgen.notes.dmw.lite.mdl.model.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ModelFactoryImpl extends EFactoryImpl implements ModelFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ModelFactory init()
  {
    try
    {
      ModelFactory theModelFactory = (ModelFactory)EPackage.Registry.INSTANCE.getEFactory(ModelPackage.eNS_URI);
      if (theModelFactory != null)
      {
        return theModelFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ModelFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ModelPackage.YMODEL: return createYModel();
      case ModelPackage.YIMPORT: return createYImport();
      case ModelPackage.YANNOTATION: return createYAnnotation();
      case ModelPackage.YANNOT_ENTITY: return createYAnnotEntity();
      case ModelPackage.YANNOT_ATTRIBUTE: return createYAnnotAttribute();
      case ModelPackage.YANNOT_RELATIONSHIP: return createYAnnotRelationship();
      case ModelPackage.YANNOT_ID_INNER: return createYAnnotIdInner();
      case ModelPackage.YANNOT_IDENTIFIER: return createYAnnotIdentifier();
      case ModelPackage.YANNOTATION_ELEMENT_VALUE_PAIR: return createYAnnotationElementValuePair();
      case ModelPackage.YANNOT_ENTITY_INNER: return createYAnnotEntityInner();
      case ModelPackage.YANNOT_EXPRESSION: return createYAnnotExpression();
      case ModelPackage.YANNOT_TECHNICAL_DESIGN: return createYAnnotTechnicalDesign();
      case ModelPackage.YANNOT_TABLE: return createYAnnotTable();
      case ModelPackage.YANNOT_COLUMN: return createYAnnotColumn();
      case ModelPackage.YANNOT_COLUMN_LIKE: return createYAnnotColumnLike();
      case ModelPackage.YANNOT_ABSTRACT_COLUMN: return createYAnnotAbstractColumn();
      case ModelPackage.YANNOT_PRIMARY_KEY: return createYAnnotPrimaryKey();
      case ModelPackage.YANNOT_FOREIGN_KEY: return createYAnnotForeignKey();
      case ModelPackage.YANNOT_KEYWORD: return createYAnnotKeyword();
      case ModelPackage.YANNOT_STRING_CONSTANT: return createYAnnotStringConstant();
      case ModelPackage.YANNOT_NUMBER_CONSTANT: return createYAnnotNumberConstant();
      case ModelPackage.YANNOT_BOOL_CONSTANT: return createYAnnotBoolConstant();
      case ModelPackage.YANNOT_ARRAY: return createYAnnotArray();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YModel createYModel()
  {
    YModelImpl yModel = new YModelImpl();
    return yModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YImport createYImport()
  {
    YImportImpl yImport = new YImportImpl();
    return yImport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotation createYAnnotation()
  {
    YAnnotationImpl yAnnotation = new YAnnotationImpl();
    return yAnnotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotEntity createYAnnotEntity()
  {
    YAnnotEntityImpl yAnnotEntity = new YAnnotEntityImpl();
    return yAnnotEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotAttribute createYAnnotAttribute()
  {
    YAnnotAttributeImpl yAnnotAttribute = new YAnnotAttributeImpl();
    return yAnnotAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotRelationship createYAnnotRelationship()
  {
    YAnnotRelationshipImpl yAnnotRelationship = new YAnnotRelationshipImpl();
    return yAnnotRelationship;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotIdInner createYAnnotIdInner()
  {
    YAnnotIdInnerImpl yAnnotIdInner = new YAnnotIdInnerImpl();
    return yAnnotIdInner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotIdentifier createYAnnotIdentifier()
  {
    YAnnotIdentifierImpl yAnnotIdentifier = new YAnnotIdentifierImpl();
    return yAnnotIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotationElementValuePair createYAnnotationElementValuePair()
  {
    YAnnotationElementValuePairImpl yAnnotationElementValuePair = new YAnnotationElementValuePairImpl();
    return yAnnotationElementValuePair;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotEntityInner createYAnnotEntityInner()
  {
    YAnnotEntityInnerImpl yAnnotEntityInner = new YAnnotEntityInnerImpl();
    return yAnnotEntityInner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotExpression createYAnnotExpression()
  {
    YAnnotExpressionImpl yAnnotExpression = new YAnnotExpressionImpl();
    return yAnnotExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotTechnicalDesign createYAnnotTechnicalDesign()
  {
    YAnnotTechnicalDesignImpl yAnnotTechnicalDesign = new YAnnotTechnicalDesignImpl();
    return yAnnotTechnicalDesign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotTable createYAnnotTable()
  {
    YAnnotTableImpl yAnnotTable = new YAnnotTableImpl();
    return yAnnotTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotColumn createYAnnotColumn()
  {
    YAnnotColumnImpl yAnnotColumn = new YAnnotColumnImpl();
    return yAnnotColumn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotColumnLike createYAnnotColumnLike()
  {
    YAnnotColumnLikeImpl yAnnotColumnLike = new YAnnotColumnLikeImpl();
    return yAnnotColumnLike;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotAbstractColumn createYAnnotAbstractColumn()
  {
    YAnnotAbstractColumnImpl yAnnotAbstractColumn = new YAnnotAbstractColumnImpl();
    return yAnnotAbstractColumn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotPrimaryKey createYAnnotPrimaryKey()
  {
    YAnnotPrimaryKeyImpl yAnnotPrimaryKey = new YAnnotPrimaryKeyImpl();
    return yAnnotPrimaryKey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotForeignKey createYAnnotForeignKey()
  {
    YAnnotForeignKeyImpl yAnnotForeignKey = new YAnnotForeignKeyImpl();
    return yAnnotForeignKey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotKeyword createYAnnotKeyword()
  {
    YAnnotKeywordImpl yAnnotKeyword = new YAnnotKeywordImpl();
    return yAnnotKeyword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotStringConstant createYAnnotStringConstant()
  {
    YAnnotStringConstantImpl yAnnotStringConstant = new YAnnotStringConstantImpl();
    return yAnnotStringConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotNumberConstant createYAnnotNumberConstant()
  {
    YAnnotNumberConstantImpl yAnnotNumberConstant = new YAnnotNumberConstantImpl();
    return yAnnotNumberConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotBoolConstant createYAnnotBoolConstant()
  {
    YAnnotBoolConstantImpl yAnnotBoolConstant = new YAnnotBoolConstantImpl();
    return yAnnotBoolConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YAnnotArray createYAnnotArray()
  {
    YAnnotArrayImpl yAnnotArray = new YAnnotArrayImpl();
    return yAnnotArray;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelPackage getModelPackage()
  {
    return (ModelPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ModelPackage getPackage()
  {
    return ModelPackage.eINSTANCE;
  }

} //ModelFactoryImpl
