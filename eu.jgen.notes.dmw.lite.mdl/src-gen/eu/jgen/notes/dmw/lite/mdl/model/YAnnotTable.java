/**
 * generated by Xtext 2.21.0
 */
package eu.jgen.notes.dmw.lite.mdl.model;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>YAnnot Table</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getName <em>Name</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getEntityref <em>Entityref</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getColumns <em>Columns</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getPrimarykey <em>Primarykey</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getForeignkeys <em>Foreignkeys</em>}</li>
 * </ul>
 *
 * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable()
 * @model
 * @generated
 */
public interface YAnnotTable extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Entityref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Entityref</em>' reference.
   * @see #setEntityref(YAnnotEntity)
   * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable_Entityref()
   * @model
   * @generated
   */
  YAnnotEntity getEntityref();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getEntityref <em>Entityref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Entityref</em>' reference.
   * @see #getEntityref()
   * @generated
   */
  void setEntityref(YAnnotEntity value);

  /**
   * Returns the value of the '<em><b>Columns</b></em>' containment reference list.
   * The list contents are of type {@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotAbstractColumn}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Columns</em>' containment reference list.
   * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable_Columns()
   * @model containment="true"
   * @generated
   */
  EList<YAnnotAbstractColumn> getColumns();

  /**
   * Returns the value of the '<em><b>Primarykey</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Primarykey</em>' containment reference.
   * @see #setPrimarykey(YAnnotPrimaryKey)
   * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable_Primarykey()
   * @model containment="true"
   * @generated
   */
  YAnnotPrimaryKey getPrimarykey();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotTable#getPrimarykey <em>Primarykey</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Primarykey</em>' containment reference.
   * @see #getPrimarykey()
   * @generated
   */
  void setPrimarykey(YAnnotPrimaryKey value);

  /**
   * Returns the value of the '<em><b>Foreignkeys</b></em>' containment reference list.
   * The list contents are of type {@link eu.jgen.notes.dmw.lite.mdl.model.YAnnotForeignKey}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Foreignkeys</em>' containment reference list.
   * @see eu.jgen.notes.dmw.lite.mdl.model.ModelPackage#getYAnnotTable_Foreignkeys()
   * @model containment="true"
   * @generated
   */
  EList<YAnnotForeignKey> getForeignkeys();

} // YAnnotTable
