/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.base.lang.util;

import eu.jgen.notes.dmw.lite.base.lang.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see eu.jgen.notes.dmw.lite.base.lang.LangPackage
 * @generated
 */
public class LangSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static LangPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LangSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = LangPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case LangPackage.YWIDGET:
      {
        YWidget yWidget = (YWidget)theEObject;
        T result = caseYWidget(yWidget);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPARAMETER:
      {
        YParameter yParameter = (YParameter)theEObject;
        T result = caseYParameter(yParameter);
        if (result == null) result = caseYSymbol(yParameter);
        if (result == null) result = caseYNamedElement(yParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YARGUMENT:
      {
        YArgument yArgument = (YArgument)theEObject;
        T result = caseYArgument(yArgument);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YENUMERATION:
      {
        YEnumeration yEnumeration = (YEnumeration)theEObject;
        T result = caseYEnumeration(yEnumeration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YENUMERATION_CASE:
      {
        YEnumerationCase yEnumerationCase = (YEnumerationCase)theEObject;
        T result = caseYEnumerationCase(yEnumerationCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCLASS:
      {
        YClass yClass = (YClass)theEObject;
        T result = caseYClass(yClass);
        if (result == null) result = caseYNamedElement(yClass);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YMEMBER:
      {
        YMember yMember = (YMember)theEObject;
        T result = caseYMember(yMember);
        if (result == null) result = caseYNamedElement(yMember);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPROPERTY:
      {
        YProperty yProperty = (YProperty)theEObject;
        T result = caseYProperty(yProperty);
        if (result == null) result = caseYMember(yProperty);
        if (result == null) result = caseYNamedElement(yProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YTUPLES:
      {
        YTuples yTuples = (YTuples)theEObject;
        T result = caseYTuples(yTuples);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YFUNCTION:
      {
        YFunction yFunction = (YFunction)theEObject;
        T result = caseYFunction(yFunction);
        if (result == null) result = caseYMember(yFunction);
        if (result == null) result = caseYNamedElement(yFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YBLOCK:
      {
        YBlock yBlock = (YBlock)theEObject;
        T result = caseYBlock(yBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSTATEMENT:
      {
        YStatement yStatement = (YStatement)theEObject;
        T result = caseYStatement(yStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YDO_STATEMENT:
      {
        YDoStatement yDoStatement = (YDoStatement)theEObject;
        T result = caseYDoStatement(yDoStatement);
        if (result == null) result = caseYStatement(yDoStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCATCH:
      {
        YCatch yCatch = (YCatch)theEObject;
        T result = caseYCatch(yCatch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCATCH_BLOCK:
      {
        YCatchBlock yCatchBlock = (YCatchBlock)theEObject;
        T result = caseYCatchBlock(yCatchBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YVARIABLE_DECLARATION:
      {
        YVariableDeclaration yVariableDeclaration = (YVariableDeclaration)theEObject;
        T result = caseYVariableDeclaration(yVariableDeclaration);
        if (result == null) result = caseYStatement(yVariableDeclaration);
        if (result == null) result = caseYSymbol(yVariableDeclaration);
        if (result == null) result = caseYNamedElement(yVariableDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YTHROW:
      {
        YThrow yThrow = (YThrow)theEObject;
        T result = caseYThrow(yThrow);
        if (result == null) result = caseYStatement(yThrow);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YRETURN:
      {
        YReturn yReturn = (YReturn)theEObject;
        T result = caseYReturn(yReturn);
        if (result == null) result = caseYStatement(yReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YIF_STATEMENT:
      {
        YIfStatement yIfStatement = (YIfStatement)theEObject;
        T result = caseYIfStatement(yIfStatement);
        if (result == null) result = caseYStatement(yIfStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSWITCH_STATEMENT:
      {
        YSwitchStatement ySwitchStatement = (YSwitchStatement)theEObject;
        T result = caseYSwitchStatement(ySwitchStatement);
        if (result == null) result = caseYStatement(ySwitchStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSWITCH_CASE:
      {
        YSwitchCase ySwitchCase = (YSwitchCase)theEObject;
        T result = caseYSwitchCase(ySwitchCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSYMBOL:
      {
        YSymbol ySymbol = (YSymbol)theEObject;
        T result = caseYSymbol(ySymbol);
        if (result == null) result = caseYNamedElement(ySymbol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YNAMED_ELEMENT:
      {
        YNamedElement yNamedElement = (YNamedElement)theEObject;
        T result = caseYNamedElement(yNamedElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YEXPRESSION:
      {
        YExpression yExpression = (YExpression)theEObject;
        T result = caseYExpression(yExpression);
        if (result == null) result = caseYStatement(yExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YREAD_STATEMENT:
      {
        YReadStatement yReadStatement = (YReadStatement)theEObject;
        T result = caseYReadStatement(yReadStatement);
        if (result == null) result = caseYStatement(yReadStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YREAD_EACH_STATEMENT:
      {
        YReadEachStatement yReadEachStatement = (YReadEachStatement)theEObject;
        T result = caseYReadEachStatement(yReadEachStatement);
        if (result == null) result = caseYStatement(yReadEachStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCREATE_STATEMENT:
      {
        YCreateStatement yCreateStatement = (YCreateStatement)theEObject;
        T result = caseYCreateStatement(yCreateStatement);
        if (result == null) result = caseYStatement(yCreateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YUPDATE_STATEMENT:
      {
        YUpdateStatement yUpdateStatement = (YUpdateStatement)theEObject;
        T result = caseYUpdateStatement(yUpdateStatement);
        if (result == null) result = caseYStatement(yUpdateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YDELETE_STATEMENT:
      {
        YDeleteStatement yDeleteStatement = (YDeleteStatement)theEObject;
        T result = caseYDeleteStatement(yDeleteStatement);
        if (result == null) result = caseYStatement(yDeleteStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YASSOCIATE_STATEMENT:
      {
        YAssociateStatement yAssociateStatement = (YAssociateStatement)theEObject;
        T result = caseYAssociateStatement(yAssociateStatement);
        if (result == null) result = caseYStatement(yAssociateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YDISASSOCIATE_STATEMENT:
      {
        YDisassociateStatement yDisassociateStatement = (YDisassociateStatement)theEObject;
        T result = caseYDisassociateStatement(yDisassociateStatement);
        if (result == null) result = caseYStatement(yDisassociateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSTRUCT_REF_PAIR:
      {
        YStructRefPair yStructRefPair = (YStructRefPair)theEObject;
        T result = caseYStructRefPair(yStructRefPair);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YJOIN:
      {
        YJoin yJoin = (YJoin)theEObject;
        T result = caseYJoin(yJoin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YJOIN_DEF:
      {
        YJoinDef yJoinDef = (YJoinDef)theEObject;
        T result = caseYJoinDef(yJoinDef);
        if (result == null) result = caseYParameter(yJoinDef);
        if (result == null) result = caseYSymbol(yJoinDef);
        if (result == null) result = caseYNamedElement(yJoinDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YWHERE:
      {
        YWhere yWhere = (YWhere)theEObject;
        T result = caseYWhere(yWhere);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YWHILE_STATEMENT:
      {
        YWhileStatement yWhileStatement = (YWhileStatement)theEObject;
        T result = caseYWhileStatement(yWhileStatement);
        if (result == null) result = caseYStatement(yWhileStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YREPEAT_WHILE_STATEMENT:
      {
        YRepeatWhileStatement yRepeatWhileStatement = (YRepeatWhileStatement)theEObject;
        T result = caseYRepeatWhileStatement(yRepeatWhileStatement);
        if (result == null) result = caseYStatement(yRepeatWhileStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YFOR_IN_STATEMENT:
      {
        YForInStatement yForInStatement = (YForInStatement)theEObject;
        T result = caseYForInStatement(yForInStatement);
        if (result == null) result = caseYStatement(yForInStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YASSIGNMENT:
      {
        YAssignment yAssignment = (YAssignment)theEObject;
        T result = caseYAssignment(yAssignment);
        if (result == null) result = caseYExpression(yAssignment);
        if (result == null) result = caseYStatement(yAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YMEMBER_SELECTION:
      {
        YMemberSelection yMemberSelection = (YMemberSelection)theEObject;
        T result = caseYMemberSelection(yMemberSelection);
        if (result == null) result = caseYExpression(yMemberSelection);
        if (result == null) result = caseYStatement(yMemberSelection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YOR_EXPRESSION:
      {
        YOrExpression yOrExpression = (YOrExpression)theEObject;
        T result = caseYOrExpression(yOrExpression);
        if (result == null) result = caseYExpression(yOrExpression);
        if (result == null) result = caseYStatement(yOrExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YAND_EXPRESSION:
      {
        YAndExpression yAndExpression = (YAndExpression)theEObject;
        T result = caseYAndExpression(yAndExpression);
        if (result == null) result = caseYExpression(yAndExpression);
        if (result == null) result = caseYStatement(yAndExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YEQUALITY_EXPRESSION:
      {
        YEqualityExpression yEqualityExpression = (YEqualityExpression)theEObject;
        T result = caseYEqualityExpression(yEqualityExpression);
        if (result == null) result = caseYExpression(yEqualityExpression);
        if (result == null) result = caseYStatement(yEqualityExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCOMPARISON_EXPRESSION:
      {
        YComparisonExpression yComparisonExpression = (YComparisonExpression)theEObject;
        T result = caseYComparisonExpression(yComparisonExpression);
        if (result == null) result = caseYExpression(yComparisonExpression);
        if (result == null) result = caseYStatement(yComparisonExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPLUS:
      {
        YPlus yPlus = (YPlus)theEObject;
        T result = caseYPlus(yPlus);
        if (result == null) result = caseYExpression(yPlus);
        if (result == null) result = caseYStatement(yPlus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YMINUS:
      {
        YMinus yMinus = (YMinus)theEObject;
        T result = caseYMinus(yMinus);
        if (result == null) result = caseYExpression(yMinus);
        if (result == null) result = caseYStatement(yMinus);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YMUL_OR_DIV:
      {
        YMulOrDiv yMulOrDiv = (YMulOrDiv)theEObject;
        T result = caseYMulOrDiv(yMulOrDiv);
        if (result == null) result = caseYExpression(yMulOrDiv);
        if (result == null) result = caseYStatement(yMulOrDiv);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPARENTIES:
      {
        YParenties yParenties = (YParenties)theEObject;
        T result = caseYParenties(yParenties);
        if (result == null) result = caseYExpression(yParenties);
        if (result == null) result = caseYStatement(yParenties);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YNOT:
      {
        YNot yNot = (YNot)theEObject;
        T result = caseYNot(yNot);
        if (result == null) result = caseYExpression(yNot);
        if (result == null) result = caseYStatement(yNot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSTRING_CONSTANT:
      {
        YStringConstant yStringConstant = (YStringConstant)theEObject;
        T result = caseYStringConstant(yStringConstant);
        if (result == null) result = caseYExpression(yStringConstant);
        if (result == null) result = caseYStatement(yStringConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YINT_CONSTANT:
      {
        YIntConstant yIntConstant = (YIntConstant)theEObject;
        T result = caseYIntConstant(yIntConstant);
        if (result == null) result = caseYExpression(yIntConstant);
        if (result == null) result = caseYStatement(yIntConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YBOOL_CONSTANT:
      {
        YBoolConstant yBoolConstant = (YBoolConstant)theEObject;
        T result = caseYBoolConstant(yBoolConstant);
        if (result == null) result = caseYExpression(yBoolConstant);
        if (result == null) result = caseYStatement(yBoolConstant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSELF:
      {
        YSelf ySelf = (YSelf)theEObject;
        T result = caseYSelf(ySelf);
        if (result == null) result = caseYExpression(ySelf);
        if (result == null) result = caseYStatement(ySelf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSUPER:
      {
        YSuper ySuper = (YSuper)theEObject;
        T result = caseYSuper(ySuper);
        if (result == null) result = caseYExpression(ySuper);
        if (result == null) result = caseYStatement(ySuper);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YNULL:
      {
        YNull yNull = (YNull)theEObject;
        T result = caseYNull(yNull);
        if (result == null) result = caseYExpression(yNull);
        if (result == null) result = caseYStatement(yNull);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSYMBOL_REF:
      {
        YSymbolRef ySymbolRef = (YSymbolRef)theEObject;
        T result = caseYSymbolRef(ySymbolRef);
        if (result == null) result = caseYExpression(ySymbolRef);
        if (result == null) result = caseYStatement(ySymbolRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YNEW:
      {
        YNew yNew = (YNew)theEObject;
        T result = caseYNew(yNew);
        if (result == null) result = caseYExpression(yNew);
        if (result == null) result = caseYStatement(yNew);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YWidget</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YWidget</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYWidget(YWidget object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YParameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YParameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYParameter(YParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YArgument</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YArgument</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYArgument(YArgument object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YEnumeration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YEnumeration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYEnumeration(YEnumeration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YEnumeration Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YEnumeration Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYEnumerationCase(YEnumerationCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YClass</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YClass</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYClass(YClass object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YMember</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YMember</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYMember(YMember object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YProperty</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YProperty</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYProperty(YProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YTuples</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YTuples</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYTuples(YTuples object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YFunction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YFunction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYFunction(YFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YBlock</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YBlock</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYBlock(YBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YStatement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YStatement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYStatement(YStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YDo Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YDo Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYDoStatement(YDoStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YCatch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YCatch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYCatch(YCatch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YCatch Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YCatch Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYCatchBlock(YCatchBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YVariable Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YVariable Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYVariableDeclaration(YVariableDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YThrow</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YThrow</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYThrow(YThrow object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YReturn</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YReturn</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYReturn(YReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YIf Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YIf Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYIfStatement(YIfStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSwitch Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSwitch Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSwitchStatement(YSwitchStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSwitch Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSwitch Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSwitchCase(YSwitchCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSymbol</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSymbol</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSymbol(YSymbol object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YNamed Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YNamed Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYNamedElement(YNamedElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YExpression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YExpression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYExpression(YExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YRead Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YRead Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYReadStatement(YReadStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YRead Each Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YRead Each Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYReadEachStatement(YReadEachStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YCreate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YCreate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYCreateStatement(YCreateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YUpdate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YUpdate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYUpdateStatement(YUpdateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YDelete Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YDelete Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYDeleteStatement(YDeleteStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAssociate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAssociate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAssociateStatement(YAssociateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YDisassociate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YDisassociate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYDisassociateStatement(YDisassociateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YStruct Ref Pair</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YStruct Ref Pair</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYStructRefPair(YStructRefPair object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YJoin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YJoin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYJoin(YJoin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YJoin Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YJoin Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYJoinDef(YJoinDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YWhere</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YWhere</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYWhere(YWhere object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YWhile Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YWhile Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYWhileStatement(YWhileStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YRepeat While Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YRepeat While Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYRepeatWhileStatement(YRepeatWhileStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YFor In Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YFor In Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYForInStatement(YForInStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAssignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAssignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAssignment(YAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YMember Selection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YMember Selection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYMemberSelection(YMemberSelection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YOr Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YOr Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYOrExpression(YOrExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnd Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnd Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAndExpression(YAndExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YEquality Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YEquality Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYEqualityExpression(YEqualityExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YComparison Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YComparison Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYComparisonExpression(YComparisonExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YPlus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YPlus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYPlus(YPlus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YMinus</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YMinus</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYMinus(YMinus object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YMul Or Div</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YMul Or Div</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYMulOrDiv(YMulOrDiv object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YParenties</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YParenties</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYParenties(YParenties object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YNot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YNot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYNot(YNot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YString Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YString Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYStringConstant(YStringConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YInt Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YInt Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYIntConstant(YIntConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YBool Constant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YBool Constant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYBoolConstant(YBoolConstant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSelf</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSelf</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSelf(YSelf object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSuper</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSuper</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSuper(YSuper object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YNull</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YNull</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYNull(YNull object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YSymbol Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YSymbol Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYSymbolRef(YSymbolRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YNew</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YNew</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYNew(YNew object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //LangSwitch
