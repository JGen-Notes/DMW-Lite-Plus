/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.base.lang.impl;

import eu.jgen.notes.dmw.lite.base.lang.LangPackage;
import eu.jgen.notes.dmw.lite.base.lang.YBlock;
import eu.jgen.notes.dmw.lite.base.lang.YCreateStatement;
import eu.jgen.notes.dmw.lite.base.lang.YStructRefPair;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>YCreate Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.base.lang.impl.YCreateStatementImpl#getStruct <em>Struct</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.base.lang.impl.YCreateStatementImpl#getSetBlock <em>Set Block</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.base.lang.impl.YCreateStatementImpl#getSuccess <em>Success</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.base.lang.impl.YCreateStatementImpl#getAlreadyExist <em>Already Exist</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YCreateStatementImpl extends YStatementImpl implements YCreateStatement
{
  /**
   * The cached value of the '{@link #getStruct() <em>Struct</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct()
   * @generated
   * @ordered
   */
  protected YStructRefPair struct;

  /**
   * The cached value of the '{@link #getSetBlock() <em>Set Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetBlock()
   * @generated
   * @ordered
   */
  protected YBlock setBlock;

  /**
   * The cached value of the '{@link #getSuccess() <em>Success</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuccess()
   * @generated
   * @ordered
   */
  protected YBlock success;

  /**
   * The cached value of the '{@link #getAlreadyExist() <em>Already Exist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlreadyExist()
   * @generated
   * @ordered
   */
  protected YBlock alreadyExist;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YCreateStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LangPackage.Literals.YCREATE_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YStructRefPair getStruct()
  {
    return struct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct(YStructRefPair newStruct, NotificationChain msgs)
  {
    YStructRefPair oldStruct = struct;
    struct = newStruct;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__STRUCT, oldStruct, newStruct);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct(YStructRefPair newStruct)
  {
    if (newStruct != struct)
    {
      NotificationChain msgs = null;
      if (struct != null)
        msgs = ((InternalEObject)struct).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__STRUCT, null, msgs);
      if (newStruct != null)
        msgs = ((InternalEObject)newStruct).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__STRUCT, null, msgs);
      msgs = basicSetStruct(newStruct, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__STRUCT, newStruct, newStruct));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YBlock getSetBlock()
  {
    return setBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSetBlock(YBlock newSetBlock, NotificationChain msgs)
  {
    YBlock oldSetBlock = setBlock;
    setBlock = newSetBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__SET_BLOCK, oldSetBlock, newSetBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSetBlock(YBlock newSetBlock)
  {
    if (newSetBlock != setBlock)
    {
      NotificationChain msgs = null;
      if (setBlock != null)
        msgs = ((InternalEObject)setBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__SET_BLOCK, null, msgs);
      if (newSetBlock != null)
        msgs = ((InternalEObject)newSetBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__SET_BLOCK, null, msgs);
      msgs = basicSetSetBlock(newSetBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__SET_BLOCK, newSetBlock, newSetBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YBlock getSuccess()
  {
    return success;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSuccess(YBlock newSuccess, NotificationChain msgs)
  {
    YBlock oldSuccess = success;
    success = newSuccess;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__SUCCESS, oldSuccess, newSuccess);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSuccess(YBlock newSuccess)
  {
    if (newSuccess != success)
    {
      NotificationChain msgs = null;
      if (success != null)
        msgs = ((InternalEObject)success).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__SUCCESS, null, msgs);
      if (newSuccess != null)
        msgs = ((InternalEObject)newSuccess).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__SUCCESS, null, msgs);
      msgs = basicSetSuccess(newSuccess, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__SUCCESS, newSuccess, newSuccess));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YBlock getAlreadyExist()
  {
    return alreadyExist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAlreadyExist(YBlock newAlreadyExist, NotificationChain msgs)
  {
    YBlock oldAlreadyExist = alreadyExist;
    alreadyExist = newAlreadyExist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__ALREADY_EXIST, oldAlreadyExist, newAlreadyExist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlreadyExist(YBlock newAlreadyExist)
  {
    if (newAlreadyExist != alreadyExist)
    {
      NotificationChain msgs = null;
      if (alreadyExist != null)
        msgs = ((InternalEObject)alreadyExist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__ALREADY_EXIST, null, msgs);
      if (newAlreadyExist != null)
        msgs = ((InternalEObject)newAlreadyExist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YCREATE_STATEMENT__ALREADY_EXIST, null, msgs);
      msgs = basicSetAlreadyExist(newAlreadyExist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YCREATE_STATEMENT__ALREADY_EXIST, newAlreadyExist, newAlreadyExist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LangPackage.YCREATE_STATEMENT__STRUCT:
        return basicSetStruct(null, msgs);
      case LangPackage.YCREATE_STATEMENT__SET_BLOCK:
        return basicSetSetBlock(null, msgs);
      case LangPackage.YCREATE_STATEMENT__SUCCESS:
        return basicSetSuccess(null, msgs);
      case LangPackage.YCREATE_STATEMENT__ALREADY_EXIST:
        return basicSetAlreadyExist(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LangPackage.YCREATE_STATEMENT__STRUCT:
        return getStruct();
      case LangPackage.YCREATE_STATEMENT__SET_BLOCK:
        return getSetBlock();
      case LangPackage.YCREATE_STATEMENT__SUCCESS:
        return getSuccess();
      case LangPackage.YCREATE_STATEMENT__ALREADY_EXIST:
        return getAlreadyExist();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LangPackage.YCREATE_STATEMENT__STRUCT:
        setStruct((YStructRefPair)newValue);
        return;
      case LangPackage.YCREATE_STATEMENT__SET_BLOCK:
        setSetBlock((YBlock)newValue);
        return;
      case LangPackage.YCREATE_STATEMENT__SUCCESS:
        setSuccess((YBlock)newValue);
        return;
      case LangPackage.YCREATE_STATEMENT__ALREADY_EXIST:
        setAlreadyExist((YBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YCREATE_STATEMENT__STRUCT:
        setStruct((YStructRefPair)null);
        return;
      case LangPackage.YCREATE_STATEMENT__SET_BLOCK:
        setSetBlock((YBlock)null);
        return;
      case LangPackage.YCREATE_STATEMENT__SUCCESS:
        setSuccess((YBlock)null);
        return;
      case LangPackage.YCREATE_STATEMENT__ALREADY_EXIST:
        setAlreadyExist((YBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YCREATE_STATEMENT__STRUCT:
        return struct != null;
      case LangPackage.YCREATE_STATEMENT__SET_BLOCK:
        return setBlock != null;
      case LangPackage.YCREATE_STATEMENT__SUCCESS:
        return success != null;
      case LangPackage.YCREATE_STATEMENT__ALREADY_EXIST:
        return alreadyExist != null;
    }
    return super.eIsSet(featureID);
  }

} //YCreateStatementImpl
