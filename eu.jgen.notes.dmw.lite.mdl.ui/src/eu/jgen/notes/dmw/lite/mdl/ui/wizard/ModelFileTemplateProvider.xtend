/*
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.mdl.ui.wizard


import org.eclipse.xtext.ui.wizard.template.FileTemplate
import org.eclipse.xtext.ui.wizard.template.IFileGenerator
import org.eclipse.xtext.ui.wizard.template.IFileTemplateProvider

/**
 * Create a list with all file templates to be shown in the template new file wizard.
 * 
 * Each template is able to generate one or more files.
 */
class ModelFileTemplateProvider implements IFileTemplateProvider {
	override getFileTemplates() {
		#[new CreateModelFile, new CreateWidgetFile]
	}
}

@FileTemplate(label="Create Model File", icon="model_file.gif", description="Create a new model file.")
final class CreateModelFile {
	val helloName = combo("Type of model element:", #["Entity", "Technical Design", "Database", "Java", "Swift"], "The type of model element")

	override generateFiles(IFileGenerator generator) {
		
	
		
		
		generator.generate('''«folder»/«name».mdl''', '''
			/*
			* This is an example model
			*/
							 
			@entity «name» {
								
			}
		''')
	}	
}

// ModelFile.gif

@FileTemplate(label="Create Widget File", icon="widget.gif", description="Create a new widget file.")
final class CreateWidgetFile {
	val widgetTypeSelection = combo("Type of widget:", #["Widget", "ExitState", "Command"], "The type of widget")
	
	

	override generateFiles(IFileGenerator generator) {
		
		println(widgetTypeSelection)
		
		 text("hello","z")
		
		generator.generate('''«folder»/«name».dmw''', '''
			 
			/*
			* This is an example model
			*/
							 
			class «name» {
								
			}
		''')
	}
	
	}